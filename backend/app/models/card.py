from backend.app.models.base import BaseModel
from sqlalchemy import Column, Integer, String, Text, Boolean

class Card(BaseModel):
    __tablename__ = 'cards'

    id = Column(Integer, primary_key=True)
    code = Column(String, unique=True, nullable=False)
    name = Column(String)
    real_name = Column(String)
    subname = Column(String)
    text = Column(Text)
    real_text = Column(Text)
    type_code = Column(String)
    type_name = Column(String)
    faction_code = Column(String)
    faction_name = Column(String)
    pack_code = Column(String)
    pack_name = Column(String)
    position = Column(Integer)
    quantity = Column(Integer)
    is_unique = Column(Boolean)
    exceptional = Column(Boolean)
    myriad = Column(Boolean)
    permanent = Column(Boolean)
    double_sided = Column(Boolean)
    url = Column(String)
    octgn_id = Column(String)
    flavor = Column(Text)
    back_flavor = Column(Text)
    back_text = Column(Text)
    deck_limit = Column(Integer)
    health = Column(Integer)
    health_per_investigator = Column(Boolean)
    sanity = Column(Integer)
    skill_willpower = Column(Integer)
    skill_intellect = Column(Integer)
    skill_combat = Column(Integer)
    skill_agility = Column(Integer)
    real_slot = Column(String)
    illustrator = Column(String)

    # relationships
    deck_requirements = relationship("DeckRequirement", back_populates="card", uselist=False)
    deck_options = relationship("DeckOption", back_populates="card")
    traits = relationship("CardTrait", back_populates="card")
    images = relationship("CardImage", back_populates="card", uselist=False)
    variants = relationship("CardVariant", back_populates="card", uselist=False)
